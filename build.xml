<?xml version="1.0" encoding="UTF-8"?><!-- ********************************************************* --><!-- ** Chica Module                                 ** --><!-- **	                                                    ** --><!-- ** @author Vibha Anand and Tammy Dugan                                 ** --><!-- ** @version 1.0                                        ** --><!-- ********************************************************* --><project basedir="." name="Chica" default="package-module">
    <!-- *********************************************************** -->
    <!-- **                     TARGETS                           ** -->
    <!-- *********************************************************** -->
    <target name="init" description="initialization">
        <xmlcatalog id="common-dtds">
            <dtd publicId="-//OpenMRS//DTD OpenMRS Config 1.0//EN" location="lib-common/config-1.0.dtd"/>
        </xmlcatalog>
        <xmlproperty file="metadata/config.xml">
            <xmlcatalog refid="common-dtds"/>
        </xmlproperty>
        <filterset id="variables.to.replace">
            <filter token="MODULE_ID" value="${module.id}"/>
            <filter token="MODULE_NAME" value="${module.name}"/>
            <filter token="MODULE_VERSION" value="${module.version}"/>
            <filter token="MODULE_PACKAGE" value="${module.package}"/>
        </filterset>
        <path id="classpath">
            <!--<fileset dir="lib">
				<include name="**/*.jar"/>
			</fileset>-->
            <fileset dir="lib-common">
                <include name="**/*.jar"/>
            </fileset>
            <pathelement location="build"/>
        </path>
    </target>
    <target name="clean" description="Delete build and dist directories">
        <delete dir="dist"/>
        <delete dir="build"/>
    </target>
    <target name="compile-module" depends="init" description="Compiles the module">
        <mkdir dir="build"/>
        <!-- Copy other source data to the build folder -->
        <copy todir="build">
            <fileset dir="src/" excludes="**/*.java"/>
        </copy>
        <!--  Compile module java files -->
        <javac destdir="build" classpathref="classpath" debug="true" debuglevel="lines,vars,source">
            <src path="src/"/>
            <include name="**/*.java"/>
        </javac>
        <!--  Compile module test java files -->
        <javac destdir="build" classpathref="classpath" debug="true" debuglevel="lines,vars,source">
            <src path="test/"/>
            <include name="**/*.java"/>
        </javac>
        <!--  Compile module web java files -->
        <javac destdir="build" classpathref="classpath" debug="true" debuglevel="lines,vars,source">
            <compilerarg line="-g"/>
            <src path="web/src/"/>
            <include name="**/*.java"/>
        </javac>
    </target>
    <target name="package-module" depends="compile-module,bind" description="Packages module into jar file">
        <mkdir dir="dist"/>
        <!-- Copy module metadata -->
        <copy todir="build/">
            <fileset dir="metadata/" includes="**/*">
                <exclude name="*.zip"/>
            </fileset>
            <filterset refid="variables.to.replace"/>
        </copy>
        <!-- Copy the /web/resources folder separately so that image files are not corrupted -->
        <copy todir="build/web/module/">
            <fileset dir="web/module/" includes="resources/**/*"/>
        </copy>
        <!-- Copy module web data -->
        <copy todir="build/web/module/">
            <fileset dir="web/module/" includes="**/*"/>
            <filterset refid="variables.to.replace"/>
        </copy>
        <!-- Copy lib folder -->
        <!-- (lib should only contain this module's required -->
        <!-- libraries that OpenMRS doesn't contain already) -->
        <!--<copy todir="build/lib" failonerror="false">
			<fileset dir="lib" includes="**/*" />
		</copy>-->
        <!-- Copy log4j properties -->
        <copy todir="build/">
            <fileset dir="" includes="log4j.xml"/>
        </copy>
        <!-- Copy test files -->
        <copy todir="build/">
            <fileset dir="test" includes="*.xml"/>
        </copy>
        <!-- Create distributable jar file -->
        <jar destfile="dist/${module.id}-${module.version}.omod">
            <fileset dir="build" includes="**/*">
                <exclude name="**/dbunitFiles/**"/>
                <exclude name="**/testFiles/**"/>
            </fileset>
        </jar>
    </target>
    <target name="deploy-web" depends="package-module">
        <property environment="env"/>
        <copy todir="${env.CATALINA_HOME}/webapps/openmrs/WEB-INF/view/module/${module.id}">
            <fileset dir="web/module" includes="**/*"/>
        </copy>
    </target>
    <target name="package-jar" depends="package-module" description="Packages class files into jar file to be included in other projects">
        <!-- Create distributable jar file -->
        <jar destfile="dist/${module.id}-${module.version}.jar">
            <fileset dir="build">
                <exclude name="test/**/*"/>
            </fileset>
        </jar>
    </target>
    <target name="bind">
        <taskdef name="bind" classname="org.jibx.binding.ant.CompileTask">
            <classpath refid="classpath"/>
        </taskdef>
        <bind binding="${basedir}/binding.xml">
            <classpath refid="classpath"/>
        </bind>
    </target>
    <target name="codegen">
        <java classname="org.jibx.schema.codegen.CodeGen" classpathref="classpath">
            <arg value="-t"/>
            <arg value="src/org/openmrs/module/chica/xmlBeans"/>
            <arg value="src/org/openmrs/module/chica/xmlBeans/*.xsd"/>
        </java>
    </target>
    <target name="generate-client">
        <path id="axis2classpath">
            <fileset dir="lib-common">
                <include name="**/*.jar"/>
            </fileset>
        </path>
        <taskdef name="axis2-wsdl2java" classname="org.apache.axis2.tool.ant.AntCodegenTask" classpathref="axis2classpath"/>
        <axis2-wsdl2java wsdlfilename="${basedir}/MRNRequestForDump.wsdl" output="${basedir}" packageName="org.openmrs.module.chica.mrfservices"/>
    </target>
</project>
